<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2892" name="processingjs" prototype="Page" created="1374308047101" lastModified="1452811338081">
  <hop:parent idref="2471" prototyperef="Page"/>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36</http_browser>
    <lang>en-us</lang>
    <uri>processingjs</uri>
    <http_host>beagleboard.org</http_host>
    <time type="date">21.07.2013 06:28:51 UTC</time>
    <pseudoparent idref="2471" prototyperef="Page"/>
    <http_remotehost>127.0.0.1</http_remotehost>
    <hopsession>127.0.0.12.0.200.cbriq8cyreb6</hopsession>
    <user>jkridner@gmail.com</user>
    <pvcount type="float">951.0</pvcount>
    <body>&lt;h1&gt;&lt;a href=&quot;http://processingjs.org/&quot; class=&quot;external&quot;&gt;Processing.JS&lt;/a&gt;&lt;/h1&gt;
&lt;canvas id=&quot;mysketch&quot;&gt;&lt;/canvas&gt;
&lt;script src=&quot;/static/bonescript.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/static/processing.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
(function(){
var canvas = document.getElementById(&apos;mysketch&apos;);
var pjs = new Processing(canvas);

// Global variables
var radius = 50.0;
var X, Y;
var nX, nY;
var delay = 16;
var brightness = 0;
var buttonStatus = false;
var LED_RED = &apos;P9_42&apos;;
var LED_GREEN = &apos;P9_14&apos;;
var LED_BLUE = &apos;P9_16&apos;;
var BUTTON = &apos;P8_19&apos;;
var POT = &apos;P9_36&apos;;

// Get the BoneScript library and begin updating the canvas
setTargetAddress(&apos;192.168.7.2&apos;, {initialized: run});
function run() {
    var b = require(&apos;bonescript&apos;);
    b.pinMode(LED_RED, b.OUTPUT);
    b.pinMode(LED_GREEN, b.OUTPUT);
    b.pinMode(LED_BLUE, b.OUTPUT);
    b.pinMode(BUTTON, b.INPUT);

    // Setup the Processing Canvas
    pjs.setup = function() {
        pjs.size(300, 300);
        pjs.strokeWeight(10);
        pjs.frameRate(15);
        X = pjs.width / 2;
        Y = pjs.height / 2;
        nX = X;
        nY = Y;  
    }
    
    // Main draw loop
    pjs.draw = function() {
        // Calculate some fading values based on the frame count
        radius = 50.0 + 10.0*pjs.sin(pjs.frameCount / 4);
        brightness = (radius - 40.0) / 20.0;
        
        // Set the RGB LED color based on the status of the button
        if(buttonStatus) {
            b.analogWrite(LED_RED, brightness);
            b.analogWrite(LED_BLUE, 0);
        } else {
            b.analogWrite(LED_RED, 0);            
            b.analogWrite(LED_BLUE, brightness);
        }
      
        // Track circle to new destination
        X+=(nX-X)/delay;
        Y+=(nY-Y)/delay;
      
        // Fill canvas grey
        pjs.background(100);
      
        // Set fill-color to blue or red, based on button status
        if(buttonStatus) pjs.fill(200, 30, 20)
        else pjs.fill(0, 121, 184);
      
        // Set stroke-color white
        pjs.stroke(255); 
      
        // Draw circle
        pjs.ellipse(X, Y, radius, radius);
        
        // Fetch slider location for next time
        b.analogRead(POT, onAnalogRead);
        
        // Fetch button status
        b.digitalRead(BUTTON, onDigitalRead);
    }
    
    // Handle data back from potentiometer
    function onAnalogRead(x) {
        if(!x.err &amp;&amp; (x.value &gt;= 0) &amp;&amp; (x.value &lt;= 1)) {
            nY = x.value * pjs.height;    
        }
    }
    
    // Handle data back from button
    function onDigitalRead(x) {
        buttonStatus = (x.value == b.LOW) ? true : false;
    }
    
    pjs.setup();
}

})();
&lt;/script&gt;
&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;</body>
    <http_language>en-US,en;q=0.8</http_language>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_referer>http://beagleboard.org/support/BoneScript/processingjs/edit</http_referer>
    <hop:child idref="3008" prototyperef="Page"/>
  </hopobject>
</xmlroot>
