<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="812" name="OSkitPort" prototype="Page" created="1254463096354" lastModified="1452791074746">
  <hop:parent idref="20" prototyperef="Page"/>
    <edit_skin>edit_project</edit_skin>
    <updatetime type="date">02.10.2009 05:58:16 UTC</updatetime>
    <uri>OSkitPort</uri>
    <time type="date">02.10.2009 05:58:16 UTC</time>
    <pseudoparent idref="20" prototyperef="Page"/>
    <registrant>provocamper.myopenid.com</registrant>
    <pname>OSkit port To Beagle Board.</pname>
    <user>provocamper.myopenid.com</user>
    <pvcount type="float">2731.0</pvcount>
    <body>Porting the OS kit will take quite some time. I am currently estimating at least 6 months for the project. This will be a very difficult and rewarding project for me. I will be learning so many new things . I have always loved the study of operating systems and the languages that go with them. The OS Kit would allow me to continue those studies in a very different system. I can test this set of tools out with a software OMAP emulator (QEMU) to get started.

 The basic outline for the port will be:
1. Build my cross compiling environment so that I can start working on the OS kit libraries. This should take about 2 weeks to get all set up. This would be faster had I a Beagle Board to work with.

1. Adapt the multiboot functionality to the OMAP/XLoader. I will borrow heavily upon the knowledge stored in the Linux port to ARM.

2. Kernel Support Library -- This component will take the longest since it is the most platform dependent. I am also sure that this will grow as the other components are worked on.

3. Memory Management Library -- This will be another tough component as I will be using the memory management functions available in the ARM processor.

4. Minimal C Library -- This should be an easier module to port and should be quite straight forward.

5. Debugging Support -- This will be another interesting module in that I have never dealt with the deep implementation details of a debugger.

6. Device Driver Support -- Should be able to borrow information from the Linux port to this platform.

7. Protocol Stacks -- I could finally be implementing something that might give me networking.

8. File Systems -- This will give a way to experiment a bit with different ideas that I have.

When all is said and done I am hoping that more people can use what I have ported to support their next project on the Beagle  Board.</body>
    <errmsg></errmsg>
    <homepage>http://code.google.com/p/beagleboardoskit/</homepage>
    <render_skin>project</render_skin>
    <shortdesc>My project proposal is to port the OS kit software to the Beagle Board. The OS Kit is a series of component libraries that makes creating new operating systems and research on those systems much easier.</shortdesc>
    <rssfeed></rssfeed>
  </hopobject>
</xmlroot>
