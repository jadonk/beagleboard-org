<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2298" name="EMMA" prototype="Page" created="1354875057220" lastModified="1421965660317">
  <hop:parent idref="20" prototyperef="Page"/>
    <edit_skin>edit_project</edit_skin>
    <updatetime type="date">09.12.2012 06:57:47 UTC</updatetime>
    <uri>EMMA</uri>
    <time type="date">07.12.2012 10:10:57 UTC</time>
    <pseudoparent idref="20" prototyperef="Page"/>
    <registrant>vkadal@gmail.com</registrant>
    <pname>EMMA- Electronic Marimba Music Automator</pname>
    <user>afrooz.myopenid.com</user>
    <pvcount type="float">1508.0</pvcount>
    <body>EMMA works by measuring the rotation of a handle built into a balsa wood box sitting atop our full-size marimba. This data is read in Pure Data from an Arduino Nano board. Pure Data (PD) uses the rotation data to advance a sequencer that is connected to a user defined music score. The score displays a selected melody. As the sequencer advances through the score, PD sends messages to a second Arduino in order to trigger a set of seven solenoids placed under seven marimba keys. Additionally information is relayed back to the original Arduino to send haptic feedback to the handle coupled to a 5v battery.</body>
    <errmsg></errmsg>
    <homepage></homepage>
    <render_skin>project</render_skin>
    <shortdesc>EMMA—our Electronic Marimba Music Automator—transforms a traditional marimba in to an interactive music box. The metaphor of a music box is applied to a larger scale orchestral instrument while preserving some of the precious and playful qualities of playing a music box. We sought to stay true to the concept sonically (striving for a more delicate and simple sound), aesthetically (by creating a turning handle and by visualizing a changing music box score), and finally interactively (by using haptics to feel the notes as well as seeing them go by on the score).
These three goals were achieved by creating custom hardware and software which leveraged the use of embedded Linux, Arduino microprocessor boards, and custom circuits, enclosures and actuators. The software to interface with our design was created using Pure Data.</shortdesc>
    <rssfeed></rssfeed>
  </hopobject>
</xmlroot>
