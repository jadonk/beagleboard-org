<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2969" name="2011-02-28-using-perl-to-read-linux-events" prototype="Page" created="1375203154189" lastModified="1452812062964">
  <hop:parent idref="2912" prototyperef="Page"/>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36</http_browser>
    <lang>en-us</lang>
    <uri>2011-02-28-using-perl-to-read-linux-events</uri>
    <http_host>beagleboard.org</http_host>
    <time type="date">30.07.2013 17:08:21 UTC</time>
    <pseudoparent idref="2912" prototyperef="Page"/>
    <http_remotehost>127.0.0.1</http_remotehost>
    <hopsession>127.0.0.192.94.94.1agh54kvhedkc</hopsession>
    <user>doug@dougloo.com</user>
    <pvcount type="float">1233.0</pvcount>
    <body>&lt;script&gt;
    setTimeout(function(){$(&quot;.line&quot;).attr(&apos;class&apos;, &apos;gist_line&apos;);}, 3000);
&lt;/script&gt;
&lt;h3 class=&apos;post-title entry-title&apos; itemprop=&apos;name&apos;&gt;
Using Perl to read Linux events
&lt;/h3&gt;
&lt;div class=&apos;post-header&apos;&gt;
&lt;div class=&apos;post-header-line-1&apos;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&apos;post-body entry-content&apos; id=&apos;post-body-1640951945066395271&apos; itemprop=&apos;description articleBody&apos;&gt;
For a simple demo that played a movie on a BeagleBoard, I wanted to add a simple mechanism to start the movie over again if the USER button was pressed.&lt;br /&gt;&lt;br /&gt;To read a Linux input event, it is as simple as just performing a read.  The only trick to this for me, however, is that I wanted the read to timeout.  This was resolved by using the Perl alarm() function can catching the signal within an eval().&lt;br /&gt;&lt;br /&gt;I&apos;ve uploaded &lt;a href=&quot;https://gist.github.com/848252&quot;&gt;a gist of my example play_movie.pl&lt;/a&gt; script:&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;script src=&quot;https://gist.github.com/jadonk/848252.js&quot;&gt;&lt;/script&gt;
&lt;noscript&gt;&lt;pre&gt;#!/usr/bin/perl&lt;br /&gt;$ENV{&apos;DISPLAY&apos;} = &quot;:0.0&quot;;&lt;br /&gt;system(&quot;xhost +&quot;);&lt;br /&gt;#system(&quot;totem --quit&quot;);&lt;br /&gt;#system(&quot;nice -n -5 totem --fullscreen /home/root/playlist.xml &amp;&quot;);&lt;br /&gt;$cmdline_start = &quot;nice -n -5 mplayer /home/root/*.mov &amp;&quot;;&lt;br /&gt;system($cmdline_start);&lt;br /&gt;&lt;br /&gt;open(FILE, &quot;/dev/input/event0&quot;);&lt;br /&gt;binmode(FILE);&lt;br /&gt;while(1)&lt;br /&gt; {&lt;br /&gt;  eval&lt;br /&gt;   {&lt;br /&gt;    local $SIG{ALRM} = sub { die(&quot;Alarm!\n&quot;) };&lt;br /&gt;    alarm(60*28); # 28 minutes&lt;br /&gt;    read(FILE, $buf, 16);&lt;br /&gt;    alarm(0);&lt;br /&gt;   };&lt;br /&gt;  if($@)&lt;br /&gt;   {&lt;br /&gt;    printf(&quot;Restarting due to timeout\n&quot;);&lt;br /&gt;    #system(&quot;totem --next&quot;);&lt;br /&gt;    system(&quot;killall -15 mplayer&quot;);&lt;br /&gt;    sleep(1);&lt;br /&gt;    system(&quot;killall -9 mplayer&quot;);&lt;br /&gt;    sleep(1);&lt;br /&gt;    system($cmdline_start);&lt;br /&gt;   }&lt;br /&gt;  else&lt;br /&gt;   {&lt;br /&gt;    ($time1, $time2, $type, $code, $value) = unpack(&quot;iissi&quot;, $buf);&lt;br /&gt;    printf(&quot;%f %05d %05d 0x%08x\n&quot;, $time1+$time2/1000000, $type, $code, $value);&lt;br /&gt;    if($code == 276 &amp;&amp; $value == 1) # USER button pressed&lt;br /&gt;     {&lt;br /&gt;      printf(&quot;Restarting due to USER button press\n&quot;);&lt;br /&gt;      #system(&quot;totem --next&quot;);&lt;br /&gt;      system(&quot;killall -15 mplayer&quot;);&lt;br /&gt;      sleep(1);&lt;br /&gt;      system(&quot;killall -9 mplayer&quot;);&lt;br /&gt;      sleep(1);&lt;br /&gt;      system($cmdline_start);&lt;br /&gt;     }&lt;br /&gt;   }&lt;br /&gt; }&lt;/pre&gt;&lt;/noscript&gt;
&lt;div style=&apos;clear: both;&apos;&gt;&lt;/div&gt;
&lt;/div&gt;</body>
    <http_language>en-US,en;q=0.8</http_language>
    <render_skin>blog</render_skin>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_referer>http://beagleboard.org/blog/2011-02-28-using-perl-to-read-linux-events/edit</http_referer>
  </hopobject>
</xmlroot>
