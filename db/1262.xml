<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="1262" name="Page" prototype="Page" created="1286440350351" lastModified="1452814016657">
  <hop:parent idref="0" prototyperef="Root"/>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.6 Safari/537.36</http_browser>
    <gcscu_09fc0a6904b23374785c0ee5cef186728fc4a113_h2>C=456596826642-hp34gga3r8lmshjkarkbfoohfm2972f9.apps.googleusercontent.com:S=b2c3ed7296ba8c5a08bbf6ca6d04f27199473c5b..3b4c:I=1416251801:X=1416255401</gcscu_09fc0a6904b23374785c0ee5cef186728fc4a113_h2>
    <lang>en-us</lang>
    <uri>challenge</uri>
    <http_host>127.0.0.1:8080</http_host>
    <time type="date">18.11.2014 14:47:28 UTC</time>
    <pseudoparent idref="0" prototyperef="Root"/>
    <http_remotehost>127.0.0.1</http_remotehost>
    <hopsession>127.0.0.1jjd22xcncaj5</hopsession>
    <g_userstate_h2>102344295024422039483=1</g_userstate_h2>
    <user>jkridner.wordpress.com</user>
    <g_authuser_h2>0</g_authuser_h2>
    <pvcount type="float">3018.0</pvcount>
    <body> &lt;h1&gt;Texas Instruments and University of Texas BeagleBoard Open Source Challenge&lt;/h1&gt;
 &lt;p&gt;
  For details about the challenge, visit
  &lt;a class=&quot;external&quot; href=&quot;http://www.ti.com/beagleboardchallenge&quot;&gt;www.ti.com/beagleboardchallenge.&lt;/a&gt;
 &lt;/p&gt;
 &lt;p&gt;Available for download here are:&lt;/p&gt;
 &lt;ul&gt;
  &lt;li&gt;
   &lt;a href=&quot;/uploads/utclass-20101006.bz2&quot;&gt;the SD card image for the BeagleBoard training&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
   &lt;a href=&quot;/uploads/BeagleBoard101-20101007.pdf&quot;&gt;the training slides in PDF&lt;/a&gt;
  &lt;/li&gt;
 &lt;/ul&gt;
 &lt;p&gt;Note: The above SD card image and slides, and the below work-around instructions, are all intended for use on a BeagleBoard Rev C4.  Some modifications may be required for use on a BeagleBoard-xM.&lt;/p&gt;
 &lt;h2&gt;Reflash the boards&lt;/h2&gt;
 &lt;p&gt;
  A general backgrounder on booting the BeagleBoard can be found at
  &lt;a class=&quot;external&quot; href=&quot;http://www.ibm.com/developerworks/linux/library/l-beagle-board/&quot;&gt;http://www.ibm.com/developerworks/linux/library/l-beagle-board/.&lt;/a&gt;
  There are also a handful of troubleshooting tips at
  &lt;a class=&quot;external&quot; href=&quot;http://www.angstrom-distribution.org/demo/beagleboard/&quot;&gt;http://www.angstrom-distribution.org/demo/beagleboard/,&lt;/a&gt;
  in addition to the BeagleBoard FAQ
 &lt;/p&gt;
 &lt;p&gt;The boards did have an old bootloader in the flash and the cards have a buggy u-boot.bin.  To update the flash to work around the issue, connect up the serial port and run a serial terminal application, hold the USER button when you apply power, halt the boot by pressing ENTER, and then input the commands below following the &quot;OMAP3 beagleboard.org #&quot; lines:&lt;/p&gt;
 &lt;pre&gt;mmc init
fatload mmc 1 82000000 mlo
nandecc hw
nand erase 0 80000
nand write 82000000 0 20000
nand write 82000000 20000 20000
nand write 82000000 40000 20000
nand write 82000000 60000 20000
fatload mmc 1 80200000 u-boot.bin
nandecc sw
nand erase 80000 160000
nand write 80200000 80000 160000
setenv bootcmd &apos;mmc init;run loadbootscript; run bootscript&apos;
saveenv&lt;/pre&gt;
 &lt;h3&gt;Without holding down the USER button&lt;/h3&gt;
 &lt;pre&gt;Texas Instruments X-Loader 1.4.2 (Feb 19 2009 - 12:01:24)
Reading boot sector
Loading u-boot.bin from mmc


U-Boot 2010.03-dirty (Jun 05 2010 - 21:06:53)

OMAP3530-GP ES3.1, CPU-OPP2, L3-165MHz, Max clock-720Mhz
OMAP3 Beagle board + LPDDR/NAND
I2C:   ready&lt;/pre&gt;
 &lt;p&gt;Note the older version of X-Loader than what is below.  I thought that might have been the problem.&lt;/p&gt;
 &lt;h3&gt;Here&apos;s with holding the USER button and typing in the commands&lt;/h3&gt;
 &lt;p&gt;Holding the USER button when you apply power to a Rev C4 board causes it to read the X-Loader from a file called MLO on the SD card, as long as it is formatted properly.&lt;/p&gt;
 &lt;p&gt;This is what you should see when you reprogram the flash.&lt;/p&gt;
 &lt;pre&gt;Texas Instruments X-Loader 1.4.4ss (May 28 2010 - 09:34:05)
Beagle Rev C4
Reading boot sector
Loading u-boot.bin from mmc


U-Boot 2010.03-dirty (Jun 05 2010 - 21:06:53)

OMAP3530-GP ES3.1, CPU-OPP2, L3-165MHz, Max clock-720Mhz
OMAP3 Beagle board + LPDDR/NAND
I2C:   ready
DRAM:  256 MB
NAND:  256 MiB
*** Warning - bad CRC or NAND, using default environment

In:    serial
Out:   serial
Err:   serial

Probing for expansion boards, if none are connected you&apos;ll see a harmless I2C error.

timed out in wait_for_pin: I2C_STAT=0
I2C read: I/O error
Unrecognized expansion board: 0
Beagle Rev C4
Die ID #0d3800040000000004037f680c01e010
Hit any key to stop autoboot:  0
OMAP3 beagleboard.org # mmc init
mmc1 is available
OMAP3 beagleboard.org # fatload mmc 1 82000000 mlo
reading mlo

24004 bytes read
OMAP3 beagleboard.org # nandecc hw
HW ECC selected
OMAP3 beagleboard.org # nand erase 0 80000

NAND erase: device 0 offset 0x0, size 0x80000
Erasing at 0x60000 -- 100% complete.
OK
OMAP3 beagleboard.org # nand write 82000000 0 20000

NAND write: device 0 offset 0x0, size 0x20000
 131072 bytes written: OK
OMAP3 beagleboard.org # nand write 82000000 20000 20000

NAND write: device 0 offset 0x20000, size 0x20000
 131072 bytes written: OK
OMAP3 beagleboard.org # nand write 82000000 40000 20000

NAND write: device 0 offset 0x40000, size 0x20000
 131072 bytes written: OK
OMAP3 beagleboard.org # nand write 82000000 60000 20000

NAND write: device 0 offset 0x60000, size 0x20000
 131072 bytes written: OK
OMAP3 beagleboard.org # fatload mmc 1 80200000 u-boot.bin
reading u-boot.bin

209300 bytes read
OMAP3 beagleboard.org # nandecc sw
SW ECC selected
OMAP3 beagleboard.org # nand erase 80000 160000

NAND erase: device 0 offset 0x80000, size 0x160000
Erasing at 0x1c0000 -- 100% complete.
OK
OMAP3 beagleboard.org # nand write 80200000 80000 160000

NAND write: device 0 offset 0x80000, size 0x160000
 1441792 bytes written: OK
OMAP3 beagleboard.org #&lt;/pre&gt;
 &lt;h3&gt;Rebooting the board I see&lt;/h3&gt;
 &lt;p&gt;Below is what you would have seen if you held down the USER button and booted, but now that you&apos;ve overwritten MLO, you no longer have to hold the USER button to get u-boot.bin to run.  However, you&apos;ll notice below that it still doesn&apos;t work.&lt;/p&gt;
 &lt;pre&gt;Texas Instruments X-Loader 1.4.4ss (May 28 2010 - 09:34:05)
Beagle Rev C4
Reading boot sector
Loading u-boot.bin from mmc


U-Boot 2010.03-dirty (Jun 05 2010 - 21:06:53)

OMAP3530-GP ES3.1, CPU-OPP2, L3-165MHz, Max clock-720Mhz
OMAP3 Beagle board + LPDDR/NAND
I2C:   ready
DRAM:  256 MB
NAND:  256 MiB
*** Warning - bad CRC or NAND, using default environment

In:    serial
Out:   serial
Err:   serial

Probing for expansion boards, if none are connected you&apos;ll see a harmless I2C error.

timed out in wait_for_pin: I2C_STAT=0
I2C read: I/O error
Unrecognized expansion board: 0
Beagle Rev C4
Die ID #0d3800040000000004037f680c01e010
Hit any key to stop autoboot:  0
mmc1 is available
The user button is currently pressed.
reading user.scr

435 bytes read
Running bootscript from mmc ...
## Executing script at 80200000
reading uImage

3190724 bytes read
reading ramdisk.gz

3088246 bytes read
## Booting kernel from Legacy Image at 80200000 ...
   Image Name:   Angstrom/2.6.32/beagleboard
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    3190660 Bytes =  3 MB
   Load Address: 80008000
   Entry Point:  80008000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK

Starting kernel ...

Uncompressing Linux.................................................................................................................
[    0.000000] Linux version 2.6.32 (koen@dominion) (gcc version 4.3.3 (GCC) ) #1 PREEMPT Fri May 21 11:47:56 CEST 2010
[    0.000000] CPU: ARMv7 Processor [411fc083] revision 3 (ARMv7), cr=10c53c7f
.
.
.
[   24.201324] Power Management for TI OMAP3.
[   24.206451] ------------[ cut here ]------------
[   24.211151] WARNING: at arch/arm/mach-omap2/dpll.c:439 omap3_noncore_dpll_set_rate+0x228/0x26c()
[   24.220001] Modules linked in:
[   24.223144] [] (unwind_backtrace+0x0/0xdc) from [] (warn_slowpath_common+0x4c/0x80)
[   24.232604] [] (warn_slowpath_common+0x4c/0x80) from [] (omap3_noncore_dpll_set_rate+0x228/0x26c)
[   24.243316] [] (omap3_noncore_dpll_set_rate+0x228/0x26c) from [] (omap2_clk_set_rate+0x24/0x34)
[   24.253845] [] (omap2_clk_set_rate+0x24/0x34) from [] (clk_set_rate+0x4c/0xbc)
[   24.262908] [] (clk_set_rate+0x4c/0xbc) from [] (omap2_clk_set_freq+0x264/0x410)
[   24.272125] [] (omap2_clk_set_freq+0x264/0x410) from [] (omap3_sr_init+0xe0/0x174)
[   24.281524] [] (omap3_sr_init+0xe0/0x174) from [] (do_one_initcall+0x5c/0x1bc)
[   24.290557] [] (do_one_initcall+0x5c/0x1bc) from [] (kernel_init+0xa4/0x128)
[   24.299438] [] (kernel_init+0xa4/0x128) from [] (kernel_thread_exit+0x0/0x8)
[   24.308319] ---[ end trace 705f0ca8245b6012 ]---
[   24.313262] Switched to new clocking rate (Crystal/Core/MPU): 26.0/332/720 MHz
.
.
.
[   26.255096] Freeing init memory: 204K
INIT: version 2.86 booting
mount: cannot read /etc/fstab: No such file or directory
Please wait: booting...
/etc/rcS.d/S10checkroot: line 24: can&apos;t open /etc/fstab: no such file
Caching udev devnodes
Populating dev cachemv: cannot rename &apos;/tmp/uname&apos;: No such file or directory
root: mount: cannot read /etc/fstab: No such file or directory
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
chown: unknown user/group root:root
grep: /proc/filesystems: No such file or directory
grep: /proc/mounts: No such file or directory
hwclock: can&apos;t open &apos;/dev/misc/rtc&apos;: No such file or directory
Sun May 23 19:22:00 UTC 2010
hwclock: can&apos;t open &apos;/dev/misc/rtc&apos;: No such file or directory
INIT: Entering runlevel: 5
Starting syslogd/klogd: start-stop-daemon: can&apos;t open &apos;/proc&apos;: No such file or directory

(none) login:&lt;/pre&gt;
 &lt;p&gt;Ah hah!  It seems to think the USER button is pressed.  I remember that u-boot bug.  It is fixed in a newer u-boot, but we can hack in a fix by loading boot.scr instead of user.scr.&lt;/p&gt;
 &lt;h3&gt;Here&apos;s the last set of commands to type into u-boot&lt;/h3&gt;
 &lt;p&gt;Type in the last two commands now to set the boot command.  This will cause your board to always look for boot.scr on the SD card.&lt;/p&gt;
 &lt;pre&gt;OMAP3 beagleboard.org # setenv bootcmd &apos;mmc init;run loadbootscript; run bootscript&apos;
OMAP3 beagleboard.org # saveenv
Saving Environment to NAND...
Erasing Nand...
Erasing at 0x260000 -- 100% complete.
Writing to Nand... done&lt;/pre&gt;
 &lt;p&gt;If you reboot now, you should no longer get the ugly &quot;(none) login:&quot; that comes from running a ramdisk image that is too big to fit into memory.&lt;/p&gt;
 &lt;h3&gt;If you don&apos;t have both a serial port and cable&lt;/h3&gt;
 &lt;p&gt;It is likely possible to fix the SD card to enable booting all the time when holding the USER button by replacing either the u-boot.bin file or the user.scr file.  The quickest hack would be to copy boot.scr to user.scr in the FAT partition on the card, then simply power-up holding the USER button and release it when the boot starts.&lt;/p&gt;
 &lt;p/&gt;
 &lt;p&gt;Happy hacking!!&lt;/p&gt;
</body>
    <http_language>en-US,en;q=0.8</http_language>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_referer>http://beagleboard.org/challenge/edit</http_referer>
  </hopobject>
</xmlroot>
