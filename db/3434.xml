<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="3434" name="Page" prototype="Page" created="1391726977288" lastModified="1452611998741">
  <hop:parent idref="0" prototyperef="Root"/>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.152 Safari/537.36</http_browser>
    <lang>en-us</lang>
    <uri>scifest</uri>
    <http_host>beagleboard.org</http_host>
    <time type="date">11.04.2014 18:01:38 UTC</time>
    <pseudoparent idref="0" prototyperef="Root"/>
    <http_remotehost>98.250.189.79</http_remotehost>
    <hopsession>98.250.189.1fr2k0ri8th8m</hopsession>
    <user>jkridner.wordpress.com</user>
    <pvcount type="float">360.0</pvcount>
    <body>&lt;h1&gt;USA Science &amp; Engineering Festival&lt;/h1&gt;
&lt;p&gt;
    At the &lt;a href=&quot;http://www.usasciencefestival.org/&quot;&gt;
    USA Science and Engineering Festival&lt;/a&gt;, BeagleBoard.org will be
    showing off a handful of BeagleBone Black based robots, including:
    &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;#beaglemip&quot;&gt;BeagleMIP&lt;/a&gt;,&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#quickbot&quot;&gt;QuickBot-MOOC v1&lt;/a&gt;, and&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;#beaglehuxley&quot;&gt;Beagle Huxley&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
    Each of these robots utilize &lt;a href=&quot;/black&quot;&gt;BeagleBone Black&lt;/a&gt;, an
    affordable open hardware computer running Linux with lots of specialized
    I/O for interacting with sensors and controllers for the physical world.
    They also feature a &lt;a href=&quot;/support/BoneScript&quot;&gt;built-in tutorial&lt;/a&gt; and
    &lt;a href=&quot;/support/bone101&quot;&gt;development environment&lt;/a&gt; for
    learning about connecting up these various sensors and controllers, such as
    motion sensors, range finders, motors and more.
&lt;/p&gt;
&lt;a id=&quot;beaglemip&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Robotics Cape and BeagleMIP by Strawson Design&lt;/h1&gt;
&lt;p&gt;
    Inspiration is not an easy thing to come by, and no one can predict 
    when it will strike. The light bulb suddenly flashes on overhead, 
    and the gears inside your brain start to turn. The excitement of 
    the “Ah hah!” moment is great, but often short lived when the 
    realization of the logistics come into play.
    &lt;/p&gt;
    &lt;p&gt;
    Engineers often find themselves in this situation when a new idea 
    for a robot pops into their head, but then there is the complicated 
    process of crafting the internal hardware and writing the software 
    to actually make it work. James Strawson, PhD student at the 
    University of California, San Diego (UCSD) and founder of Strawson 
    Design, grew tired of having to create new circuits for every new 
    robot that he worked on, so he unified his current and future 
    robotics projects under one hardware and software platform, thus 
    creating the Robotics Cape.
    &lt;/p&gt;
    &lt;div style=&quot;float:right;width:50%;border:1px;padding:20px;overflow:hidden;&quot;&gt;
    &lt;img src=&quot;/static/uploads/1gaLmaX.png&quot; width=&quot;200%&quot; /&gt;
    &lt;p&gt;
    Robotics Cape by Strawson Design; image credit: Strawson Design
    &lt;/p&gt;    
    &lt;/div&gt;
    &lt;p&gt;
   The Robotics Cape works with the &lt;a href=&quot;http://beagleboard.org/Products/BeagleBone%20Black&quot;&gt;
   BeagleBone Black&lt;/a&gt;, powered by a TI &lt;a href=&quot;http://www.ti.com/pro-arm-bborgblog-e2e-lp&quot;&gt;
   Sitara processor&lt;/a&gt;, to make a mobile robotics platform. It includes 
   2-cell lithium battery charging, protection and monitoring circuitry
   to make sure the robot is always charged and ready to play with. 
   The Robotics Cape also provides plug-and-play connectors to easily 
   interface with common components so you can build your robot without 
   soldering or messy wiring. It was obvious for James to choose 
   BeagleBone Black when picking a Linux development board. Strawson 
   said, “First and foremost, robotics projects typically require the 
   control board to interface with custom circuitry. BeagleBone Black 
   provides an enormous array of hardware interface pins for functions 
   such as GPIO, PWM, eQEP, I2C, etc., which is exactly what tinkerers 
   and prototypers need. BeagleBone Black is also a fantastically neat 
   and tidy package that is ideal for tiny robots.” 
&lt;/p&gt;
&lt;p&gt;  
    When creating the cape, Strawson picked the features he felt would apply 
    to the largest number of applications. The cape offers: 
    &lt;ul&gt;
        &lt;li&gt;9-axis IMU: Accelerometer, gyro, magnetometer&lt;/li&gt;
        &lt;li&gt;6 PWM connectors to power servos or brushless ESCs&lt;/li&gt;
        &lt;li&gt;Power your BeagleBone with 5V 2A switching voltage regulator from 
            12v input or battery pack&lt;/li&gt;
        &lt;li&gt;2 user-accessible buttons and 2 LEDs to test GPIO functionality 
            and to test PRU GPIO&lt;/li&gt;
        &lt;li&gt;2-cell lithium cell balancer and overvoltage protector&lt;/li&gt;
        &lt;li&gt;H-bridges to drive 6 DC motors (each 1.2A continuous, 3.2A peak)&lt;/li&gt;
        &lt;li&gt;
            Plug-and-play connection supported:
            &lt;ul&gt;
                &lt;li&gt;I2C, UART, SPI&lt;/li&gt;
                &lt;li&gt;Range/gesture sensors&lt;/li&gt;
                &lt;li&gt;Serial GPS module&lt;/li&gt;
                &lt;li&gt;Spektrum™ RC receiver&lt;/li&gt;
                &lt;li&gt;Quadrature encoder inputs&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
    Strawson first used the Robotics Cape to teach a senior embedded 
    controls course at UCSD. Each student built their own BeagleMIP 
    balancing robot based on the cape and was taught to design and 
    implement a discrete-time controller to make the robot balance 
    upright and drive. Texas Instruments’ University Program donated 
    BeagleBone Black computers to UCSD to enable such a wonderful 
    project. “We learned a lot about implementing dynamic control 
    systems in a Linux environment. I was pleased to teach fellow 
    mechanical engineers how to dive into the world of embedded 
    programming and circuit design,” Strawson said.
    &lt;/p&gt;&lt;div style=&quot;float:right;width:50%;&quot;&gt;
    &lt;img src=&quot;/static/uploads/IXsA81J.png&quot; WIDTH=&quot;100%&quot; /&gt;
    &lt;p&gt;
   BeagleMIP balancing robot; image credit: Strawson Design
    &lt;/p&gt;        
    &lt;/div&gt;
    &lt;p&gt;
    Strawson is working on a few refinements on the board layout and 
    connectivity before bringing the Robotics Cape to market. He also 
    looks forward to spending more time developing control systems with 
    BeagleBone Black. He is testing a quadrotor controller based on the 
    BeagleBone Black as well as a Robotics Cape Combination designed to 
    be cheap and easy to repair while offering the networking 
    capability and processing power of BeagleBone Black. 
    &lt;/p&gt;&lt;p&gt;
    &lt;img src=&quot;/static/uploads/4XlOQOA.jpg&quot; WIDTH=&quot;50%&quot; /&gt;&lt;p&gt;
    James Strawson demoing the BeagleMIP at CES 2014
    &lt;/p&gt;
    &lt;p&gt;  
    The Robotics Cape is still a work in progress but will be available 
    for sale in the coming months. For updated information on the 
    Robotics Cape, visit Strawson Design’s website at &lt;a href=&quot;http://www.strawsondesign.com&quot;&gt;
    www.strawsondesign.com&lt;/a&gt;.
    &lt;/p&gt;
&lt;a id=&quot;quickbot&quot;&gt;&lt;/a&gt;
&lt;h1&gt;QuickBot-MOOC v1&lt;/h1&gt;
&lt;img src=&quot;/static/uploads/quickbot-mooc-v1.jpg&quot; /&gt;
&lt;p&gt;
    More info at &lt;a href=&quot;http://o-botics.org&quot;&gt;o-botics.org&lt;/a&gt;.
&lt;/p&gt;
&lt;h1&gt;Beagle Huxley&lt;/h1&gt;
&lt;img src=&quot;/static/uploads/IMG_1238.JPG&quot; /&gt;
&lt;p&gt;
    More info at &lt;a href=&quot;http://machinekit.io&quot;&gt;machinekit.io&lt;/a&gt;.
&lt;/p&gt;</body>
    <http_language>en-US,en;q=0.8</http_language>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_referer>http://beagleboard.org/scifest/edit</http_referer>
  </hopobject>
</xmlroot>
