<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="686" name="Math-Neon" prototype="Page" created="1247211863053" lastModified="1452791080986">
  <hop:parent idref="20" prototyperef="Page"/>
    <edit_skin>edit_project</edit_skin>
    <updatetime type="date">10.07.2009 07:44:23 UTC</updatetime>
    <uri>Math-Neon</uri>
    <time type="date">10.07.2009 07:44:23 UTC</time>
    <pseudoparent idref="20" prototyperef="Page"/>
    <registrant>adventus.myopenid.com</registrant>
    <pname>Math-Neon</pname>
    <user>adventus.myopenid.com</user>
    <pvcount type="float">4561.0</pvcount>
    <body>This project aims to implement high performance approximations of higher order math functions (trig, exponential, powers, etc) in C and hand optimized assembly.

The cmath implementations of these functions tend to be, for general applications, excessively accurate. Performance will be gained by relaxing the accuracy requirements as well as specifically targeting ARM Cortex devices.

Floating Point performance on ARM Cortex A8 equipped devices (OpenPandora?, Beagle Board, iPhone 3GS, Palm Pre, etc) is heavily dependent on utilizing the pipelined NEON VFPU. By default GCC targets the fully IEEE754 compliant VFP-lite, which is an order of magnitude slower. Support for the NEON unit in GCC is limited, so hand written assembly will be required.</body>
    <errmsg></errmsg>
    <homepage>http://code.google.com/p/math-neon/</homepage>
    <render_skin>project</render_skin>
    <shortdesc>ARM NEON optimised approximate cmath like library.</shortdesc>
    <rssfeed></rssfeed>
  </hopobject>
</xmlroot>
