<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2798" name="educationalBoosterPack" prototype="Page" created="1372101647469" lastModified="1421968481129">
  <hop:parent idref="2471" prototyperef="Page"/>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36</http_browser>
    <lang>en-us</lang>
    <uri>educationalBoosterPack</uri>
    <http_host>beagleboard.org</http_host>
    <time type="date">26.06.2013 14:15:07 UTC</time>
    <pseudoparent idref="2471" prototyperef="Page"/>
    <http_remotehost>127.0.0.1</http_remotehost>
    <hopsession>127.0.0.12.7.236.1tmoumlyxjrzy</hopsession>
    <user>jkridner@gmail.com</user>
    <pvcount type="float">815.0</pvcount>
    <body>&lt;script src=&quot;/static/bonescript-demo.js&quot;&gt;&lt;/script&gt;
&lt;div id=&apos;side-menu&apos; class=&quot;t3_sidebar&quot;&gt;
    &lt;ul class=&quot;left-menu&quot;&gt;&lt;strong&gt;Navigation&lt;/strong&gt;
        &lt;li&gt;&lt;a href=&quot;/static/side-menu.html&quot;&gt;Menu contents&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;t3_content_1&quot;&gt;&lt;div id=&apos;connect-status&apos;&gt;&lt;/div&gt;&lt;div id=&quot;content_child&quot;&gt;
&lt;h1&gt;Educational BoosterPack demo&lt;/h1&gt;
&lt;p&gt;The Educational BoosterPack is a daughterboard for the TI Launchpad
    low-cost development boards.  The BeagleBone LaunchPad Cape is an adapter
    board that works with the BeagleBone to enable connections to BoosterPacks.
    More information about both boards is provided at the links below.  This
    page provides a demo that can be run with recent versions of BoneScript
    provided on BeagleBone.
&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;http://forum.beaglefu.com/topic/49-beaglebone-launchpad-cape/&quot;&gt;
        BeagleBone LaunchPad Cape
    &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://embeddedcomputing.weebly.com/educational-boosterpack.html&quot;&gt;
        Educational BoosterPack
    &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    To run the below demo code, you need an installation of BoneScript 0.2 or
    newer.  Simply put your BeagleBone on the network and you should be able to
    get a connection.  If it is plugged in via USB to your computer, it should
    connect automatically.  If it is elsewhere on the network, you will need to
    input your IP address in the dialog box above and press ENTER.  Once you
    have a connection, click run.  To halt the code, refresh the browser page
    as the code is actually running within the browser page and sending messages
    to your board at each of the BoneScript library calls.
&lt;/p&gt;
&lt;p&gt;
    To have this code run on start-up, start the Cloud9 IDE and paste the code
    into the editor.  Then, save the file and drag it into the &apos;autorun&apos; folder.
    To stop it from executing, pull it out of the &apos;autorun&apos; folder.
&lt;/p&gt;
&lt;img src=&quot;/static/images/black-emmc-and-hdmi-pins.png&quot; width=&quot;40%&quot; align=&quot;right&quot; /&gt;
&lt;p&gt;&lt;small&gt;
    &lt;em&gt;Note:&lt;/em&gt; Currently the J3 and J4 headers are not populated on the
    BeagleBone LaunchPad Cape.  If J3 is populated, the BoosterPack could
    actually damage BeagleBone, because the analog signals would be at too
    high a voltage level.  The designer &lt;i&gt;should&lt;/i&gt; perform voltage level
    translation on future revisions.&lt;br /&gt;
    &lt;em&gt;Note:&lt;/em&gt; Some of the pins are connected at places used by the eMMC on
    BeagleBone Black.  These connections &lt;i&gt;should&lt;/i&gt; be moved by the
    designer on future revisions to unused pins.&lt;br /&gt;
    &lt;em&gt;Note:&lt;/em&gt; The BeagleBone LaunchPad Cape does not include an EEPROM for
    indentification by BeagleBone. This means that it cannot be detected.  The
    designer &lt;i&gt;should&lt;/i&gt; include a cape EEPROM on future revisions.
&lt;/small&gt;&lt;/p&gt;
&lt;h2&gt;Demo code
    &lt;button class=&quot;dynlink&quot; onclick=&quot;demoRun(&apos;code&apos;)&quot;&gt;run&lt;/button&gt;
    &lt;button class=&quot;dynlink&quot; onclick=&quot;demoRestore(&apos;code&apos;)&quot;&gt;restore&lt;/button&gt;
&lt;/h2&gt;
&lt;div id=&apos;console-output&apos; style=&apos;height:300px;&apos;&gt;&lt;/div&gt;
&lt;pre id=&apos;code&apos; class=&apos;use-editor&apos; style=&apos;height:1200px;&apos;&gt;
// Please see http://beagleboard.org/Support/bone101/#headers
// and scroll down for pins used by the eMMC and HDMI.
var b=require(&apos;bonescript&apos;);
var LED_RED=&apos;P9_25&apos;;
var LED_GREEN=&apos;P9_27&apos;;
var LED_BLUE=&apos;P8_3&apos;; // Cannot be used when eMMC not in reset
var SPKR=&apos;P9_16&apos;;
var LCD_CLK=&apos;P9_22&apos;;
var LCD_DATA=&apos;P9_18&apos;;
var LCD_RESET=&apos;P8_4&apos;; // Cannot be used when eMMC not in reset
b.pinMode(LED_RED, b.OUTPUT);
b.pinMode(LED_GREEN, b.OUTPUT);
b.pinMode(SPKR, b.OUTPUT);
doSpkrOn();
function doSpkrOn() {
    console.log(&apos;Playing 440Hz square wave on speaker&apos;);
    b.analogWrite(SPKR, 0.5, 440, onSpkrOn);
}
function onSpkrOn(x) {
    console.log(&apos;Waiting .1 second&apos;);
    setTimeout(doSpkrOff, 100);
}
function doSpkrOff() {
    console.log(&apos;Halting speaker&apos;);
    b.analogWrite(SPKR, 0, 440, onSpkrOff);
}
function onSpkrOff(x) {
    doRedHigh();
}
function doRedHigh() {
    console.log(&apos;Setting LED_RED high&apos;);
    b.digitalWrite(LED_RED, b.HIGH, onRedHigh);
}
function onRedHigh(x) {
    console.log(&apos;Waiting 1 second&apos;);
    setTimeout(onRedTimeout, 1000);
}
function onRedTimeout() {
    console.log(&apos;Setting LED_RED low&apos;);
    b.digitalWrite(LED_RED, b.LOW, onRedLow);
}
function onRedLow() {
    doGreenHigh();
}
function doGreenHigh() {
    console.log(&apos;Setting LED_GREEN high&apos;);
    b.digitalWrite(LED_GREEN, b.HIGH, onGreenHigh);
}
function onGreenHigh() {
    console.log(&apos;Waiting 1 second&apos;);
    setTimeout(onGreenTimeout, 1000);
}
function onGreenTimeout() {
    console.log(&apos;Setting LED_GREEN low&apos;);
    b.digitalWrite(LED_GREEN, b.LOW, onGreenLow);
}
function onGreenLow() {
    doSpkrOn();
}
&lt;/pre&gt;
</body>
    <http_language>en-US,en;q=0.8</http_language>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_referer>http://beagleboard.org/support/BoneScript/educationalBoosterPack/edit</http_referer>
  </hopobject>
</xmlroot>
