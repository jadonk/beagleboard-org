<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2894" name="spacebrew" prototype="Page" created="1374363966505" lastModified="1452811336508">
  <hop:parent idref="2471" prototyperef="Page"/>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36</http_browser>
    <lang>en-us</lang>
    <uri>spacebrew</uri>
    <http_host>beagleboard.org</http_host>
    <time type="date">21.07.2013 00:01:07 UTC</time>
    <pseudoparent idref="2471" prototyperef="Page"/>
    <http_remotehost>127.0.0.1</http_remotehost>
    <hopsession>127.0.0.13.7.64.jzdxkm1pger2</hopsession>
    <user>jkridner@gmail.com</user>
    <pvcount type="float">363.0</pvcount>
    <body>&lt;h1&gt;&lt;a href=&quot;http://spacebrew.cc&quot; class=&quot;external&quot;&gt;Spacebrew&lt;/a&gt;&lt;/h1&gt;
&lt;iframe width=&quot;950&quot; height=&quot;800&quot; src=&quot;http://spacebrew.github.io/spacebrew/admin/admin.html?server=sandbox.spacebrew.cc&quot;&gt;&lt;/iframe&gt;
&lt;script src=&quot;/static/sb.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/static/bonescript.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
(function(){
setTargetAddress(&apos;192.168.7.2&apos;, {initialized: run});
function run() {
    var b = require(&apos;bonescript&apos;);
    var random_id = &quot;0000&quot; + Math.floor(Math.random() * 10000);
    var app_name = &quot;BeagleBone Bacon Cape &quot; + random_id.substring(random_id.length-4);

    var button = &quot;P8_19&quot;;
    var slider = &quot;P9_36&quot;;
    var led_red = &apos;P9_42&apos;;
    var led_green = &apos;P9_14&apos;;
    var led_blue = &apos;P9_16&apos;;
    var buttonState = b.HIGH;
    var sliderState = 0;

    // configure digital I/O pins
    b.pinMode(button, b.INPUT);
    b.pinMode(led_red, b.OUTPUT);
    b.pinMode(led_green, b.OUTPUT);
    b.pinMode(led_blue, b.OUTPUT);
    
    // create spacebrew client object
    var sb = new Spacebrew.Client({reconnect:true});
    
    // set the base description
    sb.name(app_name);
    sb.description(&quot;This spacebrew client runs on BeagleBoard.org with&quot; +
        &quot; BoneScript and interacts with BeagleBone and the Bacon Cape.&quot;);
    
    // configure the publication and subscription feeds
    sb.addPublish(&quot;buttonPress&quot;, &quot;boolean&quot;, &quot;false&quot;);
    sb.addPublish(&quot;slider&quot;, &quot;range&quot;, &quot;0&quot;);
    sb.addSubscribe(&quot;red&quot;, &quot;range&quot;, &quot;0&quot;);
    sb.addSubscribe(&quot;green&quot;, &quot;range&quot;, &quot;0&quot;);
    sb.addSubscribe(&quot;blue&quot;, &quot;range&quot;, &quot;0&quot;);
    
    // override Spacebrew events - this is how you catch events coming from Spacebrew
    sb.onOpen = onOpen;
    sb.onRangeMessage = onRangeMessage;
    
    // connect to spacbrew
    sb.connect();
    
    function onOpen() {
        setInterval(readButton, 100);
        setInterval(readSlider, 100);
    }
    
    function readButton() {
        b.digitalRead(button, onButtonRead);
    }
    
    function onButtonRead(x) {
        if(buttonState != x.value) {
            buttonState = x.value;
            sb.send(&quot;buttonPress&quot;, &quot;boolean&quot;, (x.value == b.LOW) ? &quot;true&quot; : &quot;false&quot;);
        }
    }
    
    function readSlider() {
        b.analogRead(slider, onSliderRead);
    }
    
    function onSliderRead(x) {
        if(sliderState != x.value) {
            sliderState = x.value;
            sb.send(&quot;slider&quot;, &quot;range&quot;, &quot;&quot; + parseInt(x.value * 1023, 10));
        }
    }
    
    function onRangeMessage(name, value) {
        var intensity = 1.0 - (value/1023);
        switch(name) {
            case &quot;red&quot;: 
                b.analogWrite(led_red, intensity);
                break;
            case &quot;blue&quot;: 
                b.analogWrite(led_blue, intensity);
                break;
            case &quot;green&quot;: 
                b.analogWrite(led_green, intensity);
                break;
        }
    }
}
})();
&lt;/script&gt;</body>
    <http_language>en-US,en;q=0.8</http_language>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_referer>http://beagleboard.org/support/BoneScript/spacebrew/edit</http_referer>
  </hopobject>
</xmlroot>
