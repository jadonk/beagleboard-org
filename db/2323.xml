<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2323" name="Beaglebone-Spartan6 Cape" prototype="Page" created="1355727464592" lastModified="1452796774830">
  <hop:parent idref="2143" prototyperef="Page"/>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_remotehost>127.0.0.1</http_remotehost>
    <registrant>magyarm.myopenid.com</registrant>
    <http_language>en-US,en;q=0.8</http_language>
    <uri>Beaglebone-Spartan6 Cape</uri>
    <http_browser>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.101 Safari/537.11</http_browser>
    <time type="date">02.01.2013 19:05:09 UTC</time>
    <updatetime type="date">17.12.2012 06:57:44 UTC</updatetime>
    <hopsession>127.0.0.98.250.187.1pfxk25hbm38a</hopsession>
    <project_url>https://github.com/magyarm/beaglebone-fpga</project_url>
    <body>A Xilinx Spartan-6 fpga (XC6LX25) equipped cape connected to the beaglebone over the I2C, SPI, and GPMC lines. The fpga has 24k logic cells and 40 IO lines bought out to play with. For use as a data buffer a 32MB SDRAM is connected to the fpga. The board supplies 5V to the beaglebone, and allows the user to select the voltage on the 40 user accessible fpga IO&apos;s. The intention of the board is to be a platform to experiment with fpga co-processors, hardware/software co-design, and the concept of peripherals on demand. The beaglebone will be able to directly configure the fpga at any time. My goal is to get the board and it&apos;s software to a point where a software frame work is able to provide both the hardware modules in HDL and the drivers for hardware module use. The user will be able to instantiate the hardware they need, and have the drivers to interface with it. 

The board coupled with the beaglebone would be an excellent platform for Software Defined Radio, and high speed signal acquisition. I already have thoughts about connecting high speed ADCs over LVDS to the fpga. For speed, the GPMC lines are length matched to within 8mm of each other, including accounting to length differences in the Beaglebone A3 (the only one I have, but can easily change the lengths if needed). Before final release, the fpga IO differential pairs will be matched to ensure the best possible performance. 

I started this project back in June when looking for an fpga add on board for the beaglebone, similar to what exists for the original beagleboard, the pandaboard, and the Armadeus Project. Finding a few that had no updates for a long time, or weren&apos;t available to purchase, I began my own design. 6 months later here is my board. I want to share it with the beagleboard community, and this contest is a great way to do so. All my design files are on git-hub, and I welcome any and all feedback. Video show casing my design to come soon!</body>
    <agree>on</agree>
    <pseudoparent idref="2143" prototyperef="Page"/>
    <pvcount type="float">2428.0</pvcount>
    <email>michael.magyarm@gmail.com</email>
    <render_skin>cape</render_skin>
    <edit_skin>edit_cape</edit_skin>
    <http_referer>http://beagleboard.org/CapeContest/entries/Beaglebone-Spartan6+Cape/edit</http_referer>
    <http_host>beagleboard.org</http_host>
    <youtube_url>http://youtu.be/Hp5oYuiP_QA</youtube_url>
    <errmsg></errmsg>
    <user>blog.hangerhead.com</user>
    <name>Michael Magyar</name>
  </hopobject>
</xmlroot>
